name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
    #   - name: Set up JDK 11
    #     uses: actions/setup-java@v1
    #     with:
    #       java-version: 1.11
      
    #   - name: Cache SonarCloud packages
    #     uses: actions/cache@v1
    #     with:
    #       path: ~\sonar\cache
    #       key: ${{ runner.os }}-sonar
    #       restore-keys: ${{ runner.os }}-sonar
    #   - name: Cache SonarCloud scanner
    #     id: cache-sonar-scanner
    #     uses: actions/cache@v1
    #     with:
    #       path: .\.sonar\scanner
    #       key: ${{ runner.os }}-sonar-scanner
    #       restore-keys: ${{ runner.os }}-sonar-scanner
    #   - name: Install SonarCloud scanner
    #     if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
    #     shell: powershell
    #     run: |
    #       New-Item -Path .\.sonar\scanner -ItemType Directory
    #       dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Build & Test dotnet code
        run: |
          dotnet build -c Release no-restore
          dotnet test -c Release --no-restore --no-build --loger trx --results-directory ./TestResults

        # Using the trx-parser action
      - name: Parse Trx files
        uses: NasAmin/trx-parser@v0.2.0
        id: trx-parser
        with:
          TRX_PATH: ${{ github.workspace }}/TestResults #This should be the path to your TRX files
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}   

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      # - name: Build and analyze
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   shell: powershell
      #   run: |
      #     .\.sonar\scanner\dotnet-sonarscanner begin /k:"vieir4ndo_construtora-viver-sa" /o:"vieir4ndo" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      #     dotnet build 
      #     .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
